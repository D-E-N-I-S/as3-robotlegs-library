<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="com.asual.swfaddress"><apiName>com.asual.swfaddress</apiName><apiClassifier id="com.asual.swfaddress:SWFAddress"><apiName>SWFAddress</apiName><shortdesc>
     SWFAddress class.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
     SWFAddress class. 
     </apiDesc></apiClassifierDetail><apiValue id="com.asual.swfaddress:SWFAddress:onChange"><apiName>onChange</apiName><shortdesc>
         Change event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="Function"/></apiValueDef><apiDesc>
         Change event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddress:onInit"><apiName>onInit</apiName><shortdesc>
         Init event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="Function"/></apiValueDef><apiDesc>
         Init event.
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.asual.swfaddress:SWFAddressEvent"><apiName>SWFAddressEvent</apiName><shortdesc>
     Event class for SWFAddress.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
     Event class for SWFAddress.
     </apiDesc></apiClassifierDetail><apiValue id="com.asual.swfaddress:SWFAddressEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
         Defines the value of the type property of a change event object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Defines the <codeph>value</codeph> of the type property of a <codeph>change</codeph> event object.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:EXTERNAL_CHANGE"><apiName>EXTERNAL_CHANGE</apiName><shortdesc>
         Defines the value of the type property of a externalChange event object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>externalChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Defines the <codeph>value</codeph> of the type property of a <codeph>externalChange</codeph> event object.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:INIT"><apiName>INIT</apiName><shortdesc>
         Defines the value of the type property of a init event object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>init</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Defines the <codeph>value</codeph> of the type property of a <codeph>init</codeph> event object.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:INTERNAL_CHANGE"><apiName>INTERNAL_CHANGE</apiName><shortdesc>
         Defines the value of the type property of a internalChange event object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>internalChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Defines the <codeph>value</codeph> of the type property of a <codeph>internalChange</codeph> event object.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:currentTarget:get"><apiName>currentTarget</apiName><shortdesc>
         The current target of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
         The current target of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:parameterNames:get"><apiName>parameterNames</apiName><shortdesc>
         The parameters names of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         The parameters names of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:parameters:get"><apiName>parameters</apiName><shortdesc>
         The parameters of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
         The parameters of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:pathNames:get"><apiName>pathNames</apiName><shortdesc>
         The folders in the deep linking path of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         The folders in the deep linking path of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:path:get"><apiName>path</apiName><shortdesc>
         The path of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
         The path of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:target:get"><apiName>target</apiName><shortdesc>
         The target of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
         The target of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:type:get"><apiName>type</apiName><shortdesc>
         The type of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
         The type of this event.
         </apiDesc></apiValueDetail></apiValue><apiValue id="com.asual.swfaddress:SWFAddressEvent:value:get"><apiName>value</apiName><shortdesc>
         The value of this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
         The value of this event.
         </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.core"><apiName>org.robotlegs.core</apiName><apiClassifier id="org.robotlegs.core:IASyncCommand"><apiName>IASyncCommand</apiName><shortdesc>
	 Abstract IASyncCommand interface.</shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/asyncmacrocommand
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>IASyncCommand</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.mvcs"><apiName>org.robotlegs.mvcs</apiName><apiClassifier id="org.robotlegs.mvcs:ASyncMacroCommand"><apiName>ASyncMacroCommand</apiName><shortdesc>
	 Abstract ASyncMacroCommand implementation.</shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/asyncmacrocommand
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.core:IASyncCommand</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>ASyncMacroCommand</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.mvcs:ASyncMacroCommand:reflector"><apiName>reflector</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="org.robotlegs.core:IReflector"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.mvcs:MacroCommand"><apiName>MacroCommand</apiName><shortdesc>
	 Abstract MacroCommand implementation.</shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/macrocommand
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>MacroCommand</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.mvcs:MacroCommand:reflector"><apiName>reflector</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="org.robotlegs.core:IReflector"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.mvcs:ASyncCommand"><apiName>ASyncCommand</apiName><shortdesc>
	 Abstract ASyncCommand implementation.</shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/asynccommand
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.core:IASyncCommand</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>ASyncCommand</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.controller.install"><apiName>org.robotlegs.utilities.assetloader.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.controller.install:InstallAssetLoaderCommand"><apiName>InstallAssetLoaderCommand</apiName><shortdesc>
	 Map dependencies of AssetLoader.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>AssetLoader</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 
	 <ul>
	 	<li><codeph>IAssetLoader</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.core"><apiName>org.robotlegs.utilities.assetloader.core</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.core:IAssetLoader"><apiName>IAssetLoader</apiName><shortdesc>
	 The interface definition for AssetLoader.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for <codeph>AssetLoader</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.core:IAssetLoader:org.robotlegs.utilities.assetloader.core:IAssetLoader:baseUrl:get"><apiName>baseUrl</apiName><shortdesc>
		 Set an optional base url as a prefix for all Assets.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Set an optional base url as a prefix for all <codeph>Assets</codeph>.
		 
		 <p>If the requiest url of an <codeph>Asset</codeph> contains 'http://'
		 the base url will not be added to the url.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.core:IAssetLoader:org.robotlegs.utilities.assetloader.core:IAssetLoader:loaderContext:get"><apiName>loaderContext</apiName><shortdesc>
		 Set an optional LoaderContext for all Assets
		 which are loading their data via the Loader.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:LoaderContext"/></apiValueDef><apiDesc>
		 Set an optional <codeph>LoaderContext</codeph> for all <codeph>Assets</codeph>
		 which are loading their data via the <codeph>Loader</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.core:AssetLoader"><apiName>AssetLoader</apiName><shortdesc>
	 This utility allows you to easily load external assets into your application.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.assetloader.core:IAssetLoader</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This utility allows you to easily load external assets into your application.
	 
	 <p>All the assets which are loaded by the <codeph>AssetLoader</codeph> are stored
	 and can be retrieved at any time. This can be done by retrieving the asset by
	 it's url or unique id.</p>
	 
	 <p>The <codeph>AssetLoader</codeph> also allows you to load a group of assets at once.
	 Therefore you will get a <codeph>Group</codeph> returned instead of an single <codeph>Asset</codeph>.
	 That <codeph>Group</codeph> will have as well as the <codeph>Asset</codeph> an unique id you can use
	 to retrieve it at another point within your application.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoader:baseUrl:get"><apiName>baseUrl</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoader:loaderContext:get"><apiName>loaderContext</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:LoaderContext"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.core:AssetLoaderState"><apiName>AssetLoaderState</apiName><shortdesc>
	 Loading states for Assets and Groups.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Loading states for <codeph>Assets</codeph> and <codeph>Groups</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoaderState:FAILED"><apiName>FAILED</apiName><shortdesc>
		 State after the Asset failed to load (due a illegal operation or a security error).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>failed</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 State after the <codeph>Asset</codeph> failed to load (due a illegal operation or a security error).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoaderState:INITIALIZING"><apiName>INITIALIZING</apiName><shortdesc>
		 State after the Asset is instantiated and is not yet started to load.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initializing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 State after the <codeph>Asset</codeph> is instantiated and is not yet started to load.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoaderState:LOADED"><apiName>LOADED</apiName><shortdesc>
		 State after the Asset is successfully loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loaded</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 State after the <codeph>Asset</codeph> is successfully loaded.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.core:AssetLoaderState:LOADING"><apiName>LOADING</apiName><shortdesc>
		 State while the Asset is loading.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 State while the <codeph>Asset</codeph> is loading.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.error"><apiName>org.robotlegs.utilities.assetloader.error</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.error:AssetLoaderError"><apiName>AssetLoaderError</apiName><shortdesc>
	 Custom error Class for an AssetLoader.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Custom error <codeph>Class</codeph> for an <codeph>AssetLoader</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.events"><apiName>org.robotlegs.utilities.assetloader.events</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent"><apiName>AssetLoaderEvent</apiName><shortdesc>
	 Custom Event for AssetLoader.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Custom <codeph>Event</codeph> for <codeph>AssetLoader</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:ASSET_COMPLETE"><apiName>ASSET_COMPLETE</apiName><shortdesc>
		 Dispatched when an Asset is successfully loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.ASSET_COMPLETE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when an <codeph>Asset</codeph> is successfully loaded.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:ASSET_ERROR"><apiName>ASSET_ERROR</apiName><shortdesc>
		 Dispatched when an Asset failed to load (due a illegal operation or a security error).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.ASSET_ERROR</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when an <codeph>Asset</codeph> failed to load (due a illegal operation or a security error).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:ASSET_PROGRESS"><apiName>ASSET_PROGRESS</apiName><shortdesc>
		 Dispatched while an Asset is loading.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.ASSET_PROGRESS</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched while an <codeph>Asset</codeph> is loading.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:GROUP_COMPLETE"><apiName>GROUP_COMPLETE</apiName><shortdesc>
		 Dispatched when a Group is successfully loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.GROUP_COMPLETE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Group</codeph> is successfully loaded.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:GROUP_ERROR"><apiName>GROUP_ERROR</apiName><shortdesc>
		 Dispatched when a Group failed to load (due a illegal operation or a security error).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.GROUP_ERROR</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Group</codeph> failed to load (due a illegal operation or a security error).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:GROUP_PROGRESS"><apiName>GROUP_PROGRESS</apiName><shortdesc>
		 Dispatched while a Group is loading.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.assetloader.events.AssetLoaderEvent.GROUP_PROGRESS</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched while a <codeph>Group</codeph> is loading.
		 
		 <p>While a <codeph>Group</codeph> is loading, it's <codeph>Assets</codeph> will be dispatched during this progress, so you
		 are able to handle completed <codeph>Assets</codeph> before the whole <codeph>Group</codeph> is loaded (performance better wise).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:asset:get"><apiName>asset</apiName><shortdesc>
		 The Asset that triggered this Event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.assetloader.patterns.asset:IAsset</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>Asset</codeph> that triggered this <codeph>Event</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.events:AssetLoaderEvent:group:get"><apiName>group</apiName><shortdesc>
		 The optional Group that triggered this Event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.assetloader.patterns.group:IGroup</apiValueClassifier></apiValueDef><apiDesc>
		 The optional <codeph>Group</codeph> that triggered this <codeph>Event</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.patterns.asset.type"><apiName>org.robotlegs.utilities.assetloader.patterns.asset.type</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset.type:CSSAsset"><apiName>CSSAsset</apiName><shortdesc>
	 Automatic assigned type of Asset for loading stylesheets (css).</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.utilities.assetloader.patterns.asset:Asset</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Automatic assigned type of <codeph>Asset</codeph> for loading stylesheets (css).
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:CSSAsset:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
		 The loaded Stylesheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.text:StyleSheet"/></apiValueDef><apiDesc>
		 The loaded <codeph>Stylesheet</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:CSSAsset:url:set"><apiName>url</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><iheritDoc/></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset.type:DisplayObjectAsset"><apiName>DisplayObjectAsset</apiName><shortdesc>
	 Automatic assigned type of Asset for loading Bitmaps (swf).</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.utilities.assetloader.patterns.asset:Asset</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Automatic assigned type of <codeph>Asset</codeph> for loading <codeph>Bitmaps</codeph> (swf).
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:DisplayObjectAsset:displayObject:get"><apiName>displayObject</apiName><shortdesc>
		 The loaded DisplayObject.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
		 The loaded <codeph>DisplayObject</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:DisplayObjectAsset:url:set"><apiName>url</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><iheritDoc/></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset.type:XMLAsset"><apiName>XMLAsset</apiName><shortdesc>
	 Automatic assigned type of Asset for loading Bitmaps (xml).</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.utilities.assetloader.patterns.asset:Asset</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Automatic assigned type of <codeph>Asset</codeph> for loading <codeph>Bitmaps</codeph> (xml).
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:XMLAsset:xml:get"><apiName>xml</apiName><shortdesc>
		 The loaded XML.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="XML"/></apiValueDef><apiDesc>
		 The loaded <codeph>XML</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:XMLAsset:url:set"><apiName>url</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><iheritDoc/></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset.type:SoundAsset"><apiName>SoundAsset</apiName><shortdesc>
	 Automatic assigned type of Asset for loading Bitmaps (mp3, wav, aif).</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.utilities.assetloader.patterns.asset:Asset</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Automatic assigned type of <codeph>Asset</codeph> for loading <codeph>Bitmaps</codeph> (mp3, wav, aif).
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:SoundAsset:sound:get"><apiName>sound</apiName><shortdesc>
		 The loaded Sound.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.media:Sound"/></apiValueDef><apiDesc>
		 The loaded <codeph>Sound</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:SoundAsset:url:set"><apiName>url</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><iheritDoc/></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset.type:BitmapAsset"><apiName>BitmapAsset</apiName><shortdesc>
	 Automatic assigned type of Asset for loading Bitmaps (png, gif, jpg and jpeg).</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.utilities.assetloader.patterns.asset:Asset</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Automatic assigned type of <codeph>Asset</codeph> for loading <codeph>Bitmaps</codeph> (png, gif, jpg and jpeg).
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:BitmapAsset:bitmapData:get"><apiName>bitmapData</apiName><shortdesc>
		 The BitmapData of the loaded Bitmap.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:BitmapData"/></apiValueDef><apiDesc>
		 The <codeph>BitmapData</codeph> of the loaded <codeph>Bitmap</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:BitmapAsset:bitmap:get"><apiName>bitmap</apiName><shortdesc>
		 The loaded Bitmap.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Bitmap"/></apiValueDef><apiDesc>
		 The loaded <codeph>Bitmap</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset.type:BitmapAsset:url:set"><apiName>url</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.patterns.asset"><apiName>org.robotlegs.utilities.assetloader.patterns.asset</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset:Asset"><apiName>Asset</apiName><shortdesc>
	 Abstract implementation of IAsset.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.assetloader.patterns.asset:IAsset</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract implementation of <codeph>IAsset</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:closure:get"><apiName>closure</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:data:get"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:percentage:get"><apiName>percentage</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:state:get"><apiName>state</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:Asset:url:get"><apiName>url</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset"><apiName>IAsset</apiName><shortdesc>
	 The interface definition for an Asset.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for an <codeph>Asset</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
		 The current loaded bytes of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The current loaded bytes of the <codeph>Asset</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
		 The total bytes to load of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The total bytes to load of the <codeph>Asset</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:closure:get"><apiName>closure</apiName><shortdesc>
		 Optional closure method for retrieving AssetLoaderEvents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Optional closure method for retrieving <codeph>AssetLoaderEvents</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:data:get"><apiName>data</apiName><shortdesc>
		 The raw loaded data of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 The raw loaded data of the <codeph>Asset</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:id:get"><apiName>id</apiName><shortdesc>
		 The unique id of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The unique id of the <codeph>Asset</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:percentage:get"><apiName>percentage</apiName><shortdesc>
		 The current percentage of the loaded bytes of the Asset (from 0 till 100).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The current percentage of the loaded bytes of the <codeph>Asset</codeph> (from 0 till 100).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:state:get"><apiName>state</apiName><shortdesc>
		 The current state of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The current state of the <codeph>Asset</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links><link href="org.robotlegs.utilities.assetloader.core.xml#AssetLoaderState"><linktext>org.robotlegs.utilities.assetloader.core.AssetLoaderState</linktext></link></related-links></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.asset:IAsset:org.robotlegs.utilities.assetloader.patterns.asset:IAsset:url:get"><apiName>url</apiName><shortdesc>
		 The url of the Asset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The url of the <codeph>Asset</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.patterns.group"><apiName>org.robotlegs.utilities.assetloader.patterns.group</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.group:IGroup"><apiName>IGroup</apiName><shortdesc>
	 The interface definition for a Group.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for a <codeph>Group</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:assets:get"><apiName>assets</apiName><shortdesc>
		 The assets of the Group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$org.robotlegs.utilities.assetloader.patterns.asset:IAsset"/></apiValueDef><apiDesc>
		 The assets of the <codeph>Group</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
		 The current total loaded bytes of the Group (from 0 till 100).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The current total loaded bytes of the <codeph>Group</codeph> (from 0 till 100).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
		 The total bytes to load of the Group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The total bytes to load of the <codeph>Group</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:closure:get"><apiName>closure</apiName><shortdesc>
		 Optional closure method for retrieving AssetLoaderEvents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Optional closure method for retrieving <codeph>AssetLoaderEvents</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:id:get"><apiName>id</apiName><shortdesc>
		 The unique id of the Group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The unique id of the <codeph>Group</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:maxConnections:get"><apiName>maxConnections</apiName><shortdesc>
		 The max connections before a next Asset in the queue starts loading.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 The max connections before a next <codeph>Asset</codeph> in the queue starts loading.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:percentage:get"><apiName>percentage</apiName><shortdesc>
		 The current percentage of the total loaded bytes of the Group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The current percentage of the total loaded bytes of the <codeph>Group</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:IGroup:org.robotlegs.utilities.assetloader.patterns.group:IGroup:state:get"><apiName>state</apiName><shortdesc>
		 The current state of the Group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The current state of the <codeph>Group</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links><link href="org.robotlegs.utilities.assetloader.core.xml#AssetLoaderState"><linktext>org.robotlegs.utilities.assetloader.core.AssetLoaderState</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.assetloader.patterns.group:Group"><apiName>Group</apiName><shortdesc>
	 Abstract implementation of IGroup.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.assetloader.patterns.group:IGroup</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract implementation of <codeph>IGroup</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:assets:get"><apiName>assets</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$org.robotlegs.utilities.assetloader.patterns.asset:IAsset"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:closure:get"><apiName>closure</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:maxConnections:get"><apiName>maxConnections</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:percentage:get"><apiName>percentage</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.assetloader.patterns.group:Group:state:get"><apiName>state</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.assetloader.utils"><apiName>org.robotlegs.utilities.assetloader.utils</apiName><apiClassifier id="org.robotlegs.utilities.assetloader.utils:AssetUtil"><apiName>AssetUtil</apiName><shortdesc>
	 Utilities for Asset related functionalities.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Utilities for <codeph>Asset</codeph> related functionalities.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.controller.install"><apiName>org.robotlegs.utilities.layers.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.layers.controller.install:InstallLayersCommand"><apiName>InstallLayersCommand</apiName><shortdesc>
	 Map dependencies of Layers.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>Layers</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 
	 <ul>
	 	<li><codeph>ILayers</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.controller.layer"><apiName>org.robotlegs.utilities.layers.controller.layer</apiName><apiClassifier id="org.robotlegs.utilities.layers.controller.layer:TransferLayerCommand"><apiName>TransferLayerCommand</apiName><shortdesc>
	 Transfer a Layer to an other childIndex in the contextView.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Transfer a <codeph>Layer</codeph> to an other childIndex in the <codeph>contextView</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.layers.controller.layer:TransferLayerCommand:event"><apiName>event</apiName><shortdesc>
		 The LayersEvent that executed this Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.layers.events:LayersEvent</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>LayersEvent</codeph> that executed this <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.layers.controller.layer:RemoveLayerCommand"><apiName>RemoveLayerCommand</apiName><shortdesc>
	 Remove a Layer from the contextView.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Remove a <codeph>Layer</codeph> from the <codeph>contextView</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.layers.controller.layer:RemoveLayerCommand:event"><apiName>event</apiName><shortdesc>
		 The LayersEvent that executed this Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.layers.events:LayersEvent</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>LayersEvent</codeph> that executed this <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.layers.controller.layer:AddLayerCommand"><apiName>AddLayerCommand</apiName><shortdesc>
	 Add a Layer to the contextView.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Add a <codeph>Layer</codeph> to the <codeph>contextView</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.layers.controller.layer:AddLayerCommand:event"><apiName>event</apiName><shortdesc>
		 The LayersEvent that executed this Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.layers.events:LayersEvent</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>LayersEvent</codeph> that executed this <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.core"><apiName>org.robotlegs.utilities.layers.core</apiName><apiClassifier id="org.robotlegs.utilities.layers.core:Layers"><apiName>Layers</apiName><shortdesc>
	 This utility allows you to manage your displayList in layers.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.layers.core:ILayers</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Actor</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This utility allows you to manage your displayList in layers.
	 
	 <p>The advantage of using <codeph>Layers</codeph> is that you have all your type of viewComponents at one place.
	 For example all <codeph>Pages</codeph> are added in a <codeph>Layer</codeph> named <codeph>pages</codeph>. By using <codeph>Layers</codeph>
	 you can easily switch the user interface on and off while navigating. Therefore we advice you to use <codeph>Navigator</codeph>
	 or page transitions. Remember to set the property <codeph>lockLayersWhileTransitioning</codeph> of <codeph>Navigator</codeph>
	 to <codeph>true</codeph></p>. You can also manually set the user interface on and off of the independend <codeph>Layers</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="org.robotlegs.utilities.layers.core:ILayers"><apiName>ILayers</apiName><shortdesc>
	 The interface definition for Layers.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for <codeph>Layers</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.error"><apiName>org.robotlegs.utilities.layers.error</apiName><apiClassifier id="org.robotlegs.utilities.layers.error:LayersError"><apiName>LayersError</apiName><shortdesc>
	 Custom error Class for an AssetLoader.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Custom error <codeph>Class</codeph> for an <codeph>AssetLoader</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.events"><apiName>org.robotlegs.utilities.layers.events</apiName><apiClassifier id="org.robotlegs.utilities.layers.events:LayersEvent"><apiName>LayersEvent</apiName><shortdesc>
	 Custom Event for Layers.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Custom <codeph>Event</codeph> for <codeph>Layers</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.layers.events:LayersEvent:ADD_LAYER"><apiName>ADD_LAYER</apiName><shortdesc>
		 Dispatched when a Layer sould be added.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.layers.events.LayersEvent.ADD_LAYER</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Layer</codeph> sould be added.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.layers.events:LayersEvent:REMOVE_LAYER"><apiName>REMOVE_LAYER</apiName><shortdesc>
		 Dispatched when a Layer sould be removed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.layers.events.LayersEvent.REMOVE_LAYER</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Layer</codeph> sould be removed.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.layers.events:LayersEvent:TRANSFER_LAYER"><apiName>TRANSFER_LAYER</apiName><shortdesc>
		 Dispatched when a Layer sould be transfered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.layers.events.LayersEvent.TRANSFER_LAYER</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Layer</codeph> sould be transfered.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.layers.events:LayersEvent:index:get"><apiName>index</apiName><shortdesc>
		 The childIndex to transfer the Layer to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 The childIndex to transfer the <codeph>Layer</codeph> to.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.layers.events:LayersEvent:layer:get"><apiName>layer</apiName><shortdesc>
		 The Layer to be handled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.robotlegs.utilities.layers.patterns.layer:ILayer</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>Layer</codeph> to be handled.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.layers.patterns.layer"><apiName>org.robotlegs.utilities.layers.patterns.layer</apiName><apiClassifier id="org.robotlegs.utilities.layers.patterns.layer:Layer"><apiName>Layer</apiName><shortdesc>
	 Abstract implementation of IAsset.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.layers.patterns.layer:ILayer</apiBaseInterface><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract implementation of <codeph>IAsset</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="org.robotlegs.utilities.layers.patterns.layer:ILayer"><apiName>ILayer</apiName><shortdesc>
	 The interface definition for Layers.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for <codeph>Layers</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.layers.patterns.layer:ILayer:org.robotlegs.utilities.layers.patterns.layer:ILayer:name:get"><apiName>name</apiName><shortdesc>
		 The name of the Layer.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The name of the <codeph>Layer</codeph>.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.controller.data"><apiName>org.robotlegs.utilities.localizer.controller.data</apiName><apiClassifier id="org.robotlegs.utilities.localizer.controller.data:LocalizeDataCommand"><apiName>LocalizeDataCommand</apiName><shortdesc>
	 Localize XML or Object data.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Localize <codeph>XML</codeph> or <codeph>Object</codeph> data.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.localizer.controller.data:LocalizeDataCommand:event"><apiName>event</apiName><shortdesc>
		 The LocalizerEvent that executed this Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.localizer.events:LocalizerEvent</apiValueClassifier></apiValueDef><apiDesc>
		 The <codeph>LocalizerEvent</codeph> that executed this <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.controller.data:LocalizeDataCommand:localizer"><apiName>localizer</apiName><shortdesc>
		 Reference to the Localizer utility.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.localizer.core:ILocalizer</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the <codeph>Localizer</codeph> utility.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.controller.install"><apiName>org.robotlegs.utilities.localizer.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.localizer.controller.install:InstallLocalizerCommand"><apiName>InstallLocalizerCommand</apiName><shortdesc>
	 Map dependencies of Localizer.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>Localizer</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 
	 <ul>
	 	<li><codeph>ILocalizer</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.core"><apiName>org.robotlegs.utilities.localizer.core</apiName><apiClassifier id="org.robotlegs.utilities.localizer.core:ILocalizer"><apiName>ILocalizer</apiName><shortdesc>
	 The interface definition for Localizer.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for <codeph>Localizer</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="org.robotlegs.utilities.localizer.core:Localizer"><apiName>Localizer</apiName><shortdesc>
	 This utility allows you to automatically map iterations of XML
	 or Object data in the Injector.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.localizer.core:ILocalizer</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Actor</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This utility allows you to automatically map iterations of <codeph>XML</codeph>
	 or <codeph>Object</codeph> data in the <codeph>Injector</codeph>.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.error"><apiName>org.robotlegs.utilities.localizer.error</apiName><apiClassifier id="org.robotlegs.utilities.localizer.error:LocalizerError"><apiName>LocalizerError</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.events"><apiName>org.robotlegs.utilities.localizer.events</apiName><apiClassifier id="org.robotlegs.utilities.localizer.events:LocalizerEvent"><apiName>LocalizerEvent</apiName><shortdesc>
	 Custom Event for Localizer.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Custom <codeph>Event</codeph> for <codeph>Localizer</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.localizer.events:LocalizerEvent:LOCALIZE_DATA"><apiName>LOCALIZE_DATA</apiName><shortdesc>
		 Dispatched when XMl or Object data should be localized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.localizer.events.LocalizerEvent.LOCALIZE_DATA</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when <codeph>XMl</codeph> or <codeph>Object</codeph> data should be localized.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.events:LocalizerEvent:childInjector"><apiName>childInjector</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="org.robotlegs.core:IInjector"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.events:LocalizerEvent:data"><apiName>data</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.events:LocalizerEvent:locale"><apiName>locale</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.localizer.patterns.locale:ILocale</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.events:LocalizerEvent:prefix"><apiName>prefix</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.localizer.patterns.locale"><apiName>org.robotlegs.utilities.localizer.patterns.locale</apiName><apiClassifier id="org.robotlegs.utilities.localizer.patterns.locale:Locale"><apiName>Locale</apiName><shortdesc>
	 Abstract implementation of ILocale.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.localizer.patterns.locale:ILocale</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract implementation of <codeph>ILocale</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.localizer.patterns.locale:Locale:code:get"><apiName>code</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.patterns.locale:Locale:data:get"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.localizer.patterns.locale:ILocale"><apiName>ILocale</apiName><shortdesc>
	 The interface definition for an Locale.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for an <codeph>Locale</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.localizer.patterns.locale:ILocale:org.robotlegs.utilities.localizer.patterns.locale:ILocale:code:get"><apiName>code</apiName><shortdesc>
		 The code of the Locale.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The code of the <codeph>Locale</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.localizer.patterns.locale:ILocale:org.robotlegs.utilities.localizer.patterns.locale:ILocale:data:get"><apiName>data</apiName><shortdesc>
		 The data to be localized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 The data to be localized.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.controller.install"><apiName>org.robotlegs.utilities.navigator.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.navigator.controller.install:InstallNavigatorCommand"><apiName>InstallNavigatorCommand</apiName><shortdesc>
	 Map dependencies of Navigator.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>Navigator</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 
	 <ul>
	 	<li><codeph>INavigator</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.controller.page"><apiName>org.robotlegs.utilities.navigator.controller.page</apiName><apiClassifier id="org.robotlegs.utilities.navigator.controller.page:NavigateToPageCommand"><apiName>NavigateToPageCommand</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.controller.page:NavigateToPageCommand:event"><apiName>event</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.navigator.events:NavigatorEvent</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.controller.page:NavigateToPageCommand:layers"><apiName>layers</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.layers.core:ILayers</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.controller.page:NavigateToPageCommand:navigator"><apiName>navigator</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.navigator.core:INavigator</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.core"><apiName>org.robotlegs.utilities.navigator.core</apiName><apiClassifier id="org.robotlegs.utilities.navigator.core:INavigator"><apiName>INavigator</apiName><shortdesc>
	 Abstract INavigator interface.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>INavigator</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.core:INavigator:org.robotlegs.utilities.navigator.core:INavigator:choosenPage:get"><apiName>choosenPage</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.page:IPage</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:INavigator:org.robotlegs.utilities.navigator.core:INavigator:currentPage:get"><apiName>currentPage</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.page:IPage</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:INavigator:org.robotlegs.utilities.navigator.core:INavigator:defaultTransition:get"><apiName>defaultTransition</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.transition:ITransition</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:INavigator:org.robotlegs.utilities.navigator.core:INavigator:lockLayersWhileTransitioning:get"><apiName>lockLayersWhileTransitioning</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:INavigator:org.robotlegs.utilities.navigator.core:INavigator:transitioning:get"><apiName>transitioning</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.navigator.core:Navigator"><apiName>Navigator</apiName><shortdesc>
	 Abstract Navigator implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.navigator.core:INavigator</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Actor</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>Navigator</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.core:Navigator:choosenPage:get"><apiName>choosenPage</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.page:IPage</apiValueClassifier></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:Navigator:currentPage:get"><apiName>currentPage</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.page:IPage</apiValueClassifier></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:Navigator:defaultTransition:get"><apiName>defaultTransition</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.transition:ITransition</apiValueClassifier></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:Navigator:lockLayersWhileTransitioning:get"><apiName>lockLayersWhileTransitioning</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.core:Navigator:transitioning:get"><apiName>transitioning</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.error"><apiName>org.robotlegs.utilities.navigator.error</apiName><apiClassifier id="org.robotlegs.utilities.navigator.error:NavigatorError"><apiName>NavigatorError</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.events"><apiName>org.robotlegs.utilities.navigator.events</apiName><apiClassifier id="org.robotlegs.utilities.navigator.events:NavigatorEvent"><apiName>NavigatorEvent</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:NAVIGATE"><apiName>NAVIGATE</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.navigator.events.NavigatorEvent.NAVIGATE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:TRANSITION_IN_COMPLETE"><apiName>TRANSITION_IN_COMPLETE</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.navigator.events.NavigatorEvent.TRANSITION_IN_COMPLETE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:TRANSITION_IN"><apiName>TRANSITION_IN</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.navigator.events.NavigatorEvent.TRANSITION_IN</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:TRANSITION_OUT_COMPLETE"><apiName>TRANSITION_OUT_COMPLETE</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.navigator.events.NavigatorEvent.TRANSITION_OUT_COMPLETE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:TRANSITION_OUT"><apiName>TRANSITION_OUT</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.navigator.events.NavigatorEvent.TRANSITION_OUT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.events:NavigatorEvent:page"><apiName>page</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.navigator.patterns.page:IPage</apiValueClassifier><apiDefaultValue>null
		 </apiDefaultValue></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.patterns.page"><apiName>org.robotlegs.utilities.navigator.patterns.page</apiName><apiClassifier id="org.robotlegs.utilities.navigator.patterns.page:Page"><apiName>Page</apiName><shortdesc>
	 Abstract Page implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.navigator.patterns.page:IPage</apiBaseInterface><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>Page</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.patterns.page:Page:content:get"><apiName>content</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.navigator.patterns.page:IPage"><apiName>IPage</apiName><shortdesc>
	 Abstract IPage interface.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>IPage</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.navigator.patterns.page:IPage:org.robotlegs.utilities.navigator.patterns.page:IPage:content:get"><apiName>content</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.navigator.patterns.page:IPage:org.robotlegs.utilities.navigator.patterns.page:IPage:name:get"><apiName>name</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.patterns.transition"><apiName>org.robotlegs.utilities.navigator.patterns.transition</apiName><apiClassifier id="org.robotlegs.utilities.navigator.patterns.transition:ITransition"><apiName>ITransition</apiName><shortdesc>
	 Abstract ITransition interface.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>ITransition</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="org.robotlegs.utilities.navigator.patterns.transition:Transition"><apiName>Transition</apiName><shortdesc>
	 Abstract Transition implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.navigator.patterns.transition:ITransition</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>Transition</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.navigator.utils"><apiName>org.robotlegs.utilities.navigator.utils</apiName><apiClassifier id="org.robotlegs.utilities.navigator.utils:NavigatorUtil"><apiName>NavigatorUtil</apiName><shortdesc>
	 Utility to provide consistent Transition methods.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Utility to provide consistent <codeph>Transition</codeph> methods.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.controller.install"><apiName>org.robotlegs.utilities.router.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.router.controller.install:InstallRouterCommand"><apiName>InstallRouterCommand</apiName><shortdesc>
	 Map dependencies of Router.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>Router</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 <ul>
	 	<li><codeph>IRouter</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.controller.route"><apiName>org.robotlegs.utilities.router.controller.route</apiName><apiClassifier id="org.robotlegs.utilities.router.controller.route:RemoveEventFromRouteCommand"><apiName>RemoveEventFromRouteCommand</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.controller.route:RemoveEventFromRouteCommand:event"><apiName>event</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.router.events:RouterEvent</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.router.controller.route:MapEventToRouteCommand"><apiName>MapEventToRouteCommand</apiName><shortdesc>
	 Map a Command to a specific Route.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map a <codeph>Command</codeph> to a specific <codeph>Route</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.controller.route:MapEventToRouteCommand:event"><apiName>event</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.router.events:RouterEvent</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.core"><apiName>org.robotlegs.utilities.router.core</apiName><apiClassifier id="org.robotlegs.utilities.router.core:IRouter"><apiName>IRouter</apiName><shortdesc>
	 Abstract IRouter interface.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>IRouter</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.core:IRouter:org.robotlegs.utilities.router.core:IRouter:active:get"><apiName>active</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.core:IRouter:org.robotlegs.utilities.router.core:IRouter:pathNames:get"><apiName>pathNames</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.router.core:Router"><apiName>Router</apiName><shortdesc>
	 Abstract MacroCommand implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.router.core:IRouter</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Actor</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>MacroCommand</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.core:Router:active:get"><apiName>active</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.core:Router:pathNames:get"><apiName>pathNames</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.error"><apiName>org.robotlegs.utilities.router.error</apiName><apiClassifier id="org.robotlegs.utilities.router.error:RouterError"><apiName>RouterError</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.events"><apiName>org.robotlegs.utilities.router.events</apiName><apiClassifier id="org.robotlegs.utilities.router.events:RouterEvent"><apiName>RouterEvent</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.events:RouterEvent:MAP_EVENT_TO_ROUTE"><apiName>MAP_EVENT_TO_ROUTE</apiName><shortdesc>
		 Dispatched when a new Route is added and it should be mapped to a Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.router.events.RouterEvent.MAP_EVENT_TO_ROUTE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a new <codeph>Route</codeph> is added and it should be mapped to a <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.events:RouterEvent:NO_ROUTE_FOUND"><apiName>NO_ROUTE_FOUND</apiName><shortdesc>
		 Dispatched when the changed address doesn't match with any Route.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.router.events.RouterEvent.NO_ROUTE_FOUND</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when the changed address doesn't match with any <codeph>Route</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.events:RouterEvent:REMOVE_EVENT_FROM_ROUTE"><apiName>REMOVE_EVENT_FROM_ROUTE</apiName><shortdesc>
		 Dispatched when a Route should be unmapped from a Command.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>org.robotlegs.utilities.router.events.RouterEvent.REMOVE_EVENT_FROM_ROUTE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Dispatched when a <codeph>Route</codeph> should be unmapped from a <codeph>Command</codeph>.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.events:RouterEvent:payload"><apiName>payload</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/><apiDefaultValue>null
		 </apiDefaultValue></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.patterns.pattern"><apiName>org.robotlegs.utilities.router.patterns.pattern</apiName><apiClassifier id="org.robotlegs.utilities.router.patterns.pattern:Pattern"><apiName>Pattern</apiName><shortdesc>
	 Abstract Pattern implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.router.patterns.pattern:IPattern</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>Pattern</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.patterns.pattern:Pattern:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.patterns.pattern:Pattern:value:get"><apiName>value</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.router.patterns.pattern:IPattern"><apiName>IPattern</apiName><shortdesc>
	 Abstract IPattern interface.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Abstract <codeph>IPattern</codeph> interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.patterns.pattern:IPattern:org.robotlegs.utilities.router.patterns.pattern:IPattern:name:get"><apiName>name</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.patterns.pattern:IPattern:org.robotlegs.utilities.router.patterns.pattern:IPattern:value:get"><apiName>value</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.router.patterns.route"><apiName>org.robotlegs.utilities.router.patterns.route</apiName><apiClassifier id="org.robotlegs.utilities.router.patterns.route:Route"><apiName>Route</apiName><shortdesc>
	 Abstract Route implementation.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Abstract <codeph>Route</codeph> implementation.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.router.patterns.route:Route:length:get"><apiName>length</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.router.patterns.route:Route:type:get"><apiName>type</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.styles.controller.install"><apiName>org.robotlegs.utilities.styles.controller.install</apiName><apiClassifier id="org.robotlegs.utilities.styles.controller.install:InstallStylesCommand"><apiName>InstallStylesCommand</apiName><shortdesc>
	 Map dependencies of Styles.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.robotlegs.mvcs:Command</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Map dependencies of <codeph>Styles</codeph>.
	 
	 <p>The following depedencies are available after executing this <codeph>Command</codeph>:</p>
	 
	 <ul>
	 	<li><codeph>IStyles</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.styles.controller.install:InstallStylesCommand:viewMap"><apiName>viewMap</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="org.robotlegs.core:IViewMap"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.styles.core"><apiName>org.robotlegs.utilities.styles.core</apiName><apiClassifier id="org.robotlegs.utilities.styles.core:IStyles"><apiName>IStyles</apiName><shortdesc>
	 The interface definition for Styles.</shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/styles
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface definition for <codeph>Styles</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.styles.core:IStyles:org.robotlegs.utilities.styles.core:IStyles:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.text:StyleSheet"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.robotlegs.utilities.styles.core:Styles"><apiName>Styles</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 https://github.com/moorinteractive/as3-robotlegs-library/wiki/styles
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.robotlegs.utilities.styles.core:IStyles</apiBaseInterface><apiBaseClassifier>org.robotlegs.mvcs:Actor</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.styles.core:Styles:assetLoader"><apiName>assetLoader</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.robotlegs.utilities.assetloader.core:IAssetLoader</apiValueClassifier></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities.styles.core:Styles:styleSheet:get"><apiName>styleSheet</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.text:StyleSheet"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.styles.error"><apiName>org.robotlegs.utilities.styles.error</apiName><apiClassifier id="org.robotlegs.utilities.styles.error:StylesError"><apiName>StylesError</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.styles.events"><apiName>org.robotlegs.utilities.styles.events</apiName><apiClassifier id="org.robotlegs.utilities.styles.events:StylesEvent"><apiName>StylesEvent</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities.styles.view"><apiName>org.robotlegs.utilities.styles.view</apiName><apiClassifier id="org.robotlegs.utilities.styles.view:StylesTextfield"><apiName>StylesTextfield</apiName><shortdesc>
	 
	 
	 </shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.text:TextField</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities.styles.view:StylesTextfield:htmlText:set"><apiName>htmlText</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><apiInheritDoc/></apiValue><apiValue id="org.robotlegs.utilities.styles.view:StylesTextfield:text:set"><apiName>text</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="String"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utilities"><apiName>org.robotlegs.utilities</apiName><apiClassifier id="org.robotlegs.utilities:Utilities"><apiName>Utilities</apiName><shortdesc>
	 Utility to map dependencies of certain utilities.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Utility to map dependencies of certain utilities.
	 
	 <p>Probably the best place to define your mappings is in the <codeph>mapInjections</codeph> method
	 of your <codeph>Context</codeph>. You can simply call the method <codeph>mapDepedencies</codeph>
	 of <codeph>Utilities</codeph> to determine all your mappings for the following utilities.</p>
	 
	 <ul>
	 	<li><codeph>AssetLoader</codeph></li>
	 	<li><codeph>Layers</codeph></li>
	 	<li><codeph>Localizer</codeph></li>
	 	<li><codeph>Navigator</codeph></li>
	 	<li><codeph>Router</codeph></li>
	 	<li><codeph>Styles</codeph></li>
	 </ul>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="org.robotlegs.utilities:Utilities:ALL"><apiName>ALL</apiName><shortdesc>
		 Map dependencies of all utilities.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>all</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Map dependencies of all utilities.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:ASSET_LOADER"><apiName>ASSET_LOADER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:LAYERS"><apiName>LAYERS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:LOCALIZER"><apiName>LOCALIZER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:NAVIGATOR"><apiName>NAVIGATOR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:ROUTER"><apiName>ROUTER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.robotlegs.utilities:Utilities:STYLES"><apiName>STYLES</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiType value="Class"/></apiValueDef><apiDesc/><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.robotlegs.utils"><apiName>org.robotlegs.utils</apiName><apiClassifier id="org.robotlegs.utils:ClassUtil"><apiName>ClassUtil</apiName><shortdesc>
	 Utilities for Class related functionalities.</shortdesc><prolog><author>r.moorman
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Utilities for <codeph>Class</codeph> related functionalities.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage></allClasses>